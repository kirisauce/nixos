# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

let
  drives = {
    root = "/dev/disk/by-uuid/3f153e55-5e6c-429c-aa33-d48867989c6b";
    efi = "/dev/disk/by-uuid/320A-E9C9";
    commonData = "/dev/disk/by-uuid/C5A5-BDBA";
  };
in
{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usbhid" "uas" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = drives.root;
    fsType = "btrfs";
    options = [ "subvol=@nixos" ];
  };

  fileSystems."/home" = {
    device = drives.root;
    fsType = "btrfs";
    options = [ "subvol=@nixos-home" ];
  };

  fileSystems."/swap" = {
    device = drives.root;
    fsType = "btrfs";
    options = [
      "subvol=@swap"
      "nodatacow"
      "compress=no"
    ];
  };

  fileSystems."/mnt/manjaro-fs/home" = {
    device = drives.root;
    fsType = "btrfs";
    options = [
      "subvol=@home"
      "nofail"
    ];
  };

  fileSystems."/mnt/manjaro-fs/root" = {
    device = drives.root;
    fsType = "btrfs";
    options = [
      "subvol=@"
      "nofail"
    ];
  };

  fileSystems."/mnt/commondata" = {
    device = drives.commonData;
    fsType = "exfat";
    options = [
      "nofail"
      "gid=1"
      "uid=0"
      "fmask=113"
      "dmask=002"
    ];
  };

  fileSystems."/boot/efi" = {
    device = drives.efi;
    fsType = "vfat";
  };

  swapDevices = [
    {
      device = "/swap/swapfile";
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # NVIDIA GPU settings (for NVIDIA Geforce RTX 5060 Laptop)
  hardware.graphics.enable = true;
  services.xserver.videoDrivers = ["nvidia"];
  hardware.nvidia = {
    # Required
    modesetting.enable = true;

    prime.offload = {
      enable = true;
      enableOffloadCmd = true;
    };

    powerManagement = {
      enable = true;
      finegrained = true;
    };

    open = true;

    nvidiaSettings = true;

    package = config.boot.kernelPackages.nvidiaPackages.stable;

    prime = {
      intelBusId = "PCI:0:2:0";
      nvidiaBusId = "PCI:1:0:0";
    };
  };

  environment.systemPackages = with pkgs; [
    # Inspect VAAPI information
    libva-utils
  ];
}
